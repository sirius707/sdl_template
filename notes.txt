scan codes and key codes are not the same thing
i got a bug because events register scan codes while i read keycodes
action buttons weren't working because of this

animation happens too fast, should the animation and the update happen in different times?
in unity animation is 24 fps

use hungarian notoation, especially for arrays and pointers, it could save you lots of debugging

when rendering, if a character is flipped, subtract the width of the character from the rendered x_position

sprite width and height should vary between characters
as well as logical width and height vb

executing attacks needs to be synchronized with animation

make distinction between can attack and is attacking

processing attacks should happen with animation steps only
otherwise you might have 1 attack acting as multiple

seems we need to make a separate set_animation function 
similar to shift states, it also uses states (some of which will be unimplemented) but it only changes animation not player state
we need this to simulate things like jumping forward and backward withouth implementing a new state, which is effectively just jumping but with separate animation
the input will also be a destination state. we set it in the default_animations table
so default_animation[BACK_JUMP] = animatin sequence index

maybe we can avoid the scenario above if we combine similar states in the fsm
for example: JUMP, JUMP FORWARD, JUMP BACK, are effectively the same state but with different animations
so we can do this
JUMP:
JUMP_BACK:
JUMP_FORWARD:
	apply jump
	break;
WALK:
WALK_BACK:
IDLE:
	apply things
	break;

entities are sticky when they have different widths, problem in phyiscs

now the shift state function only shifts to default state animation if the player isn't in that state, 
but what if we desire to repeat a certain state from within itself, like parrying? then we can simply reset the player state by hand
then call shift state, like so:
player->enum_currante_state = 0;
shift_state(player, target_state)

idea: if your low attacked is parried you can't parry in time, other player will fuck you. but if you use a risky heavy attack and get parried. you will have a chance to parry the player before they 
finish their counter attack

input doesn't seem very responsive during parries and on hit delays.
maybe we need to acquire input in a function and clear action keys in another function

ther should be a get hit for light attacks (less frames, 2 seems ideal), mid attacks and heavy attacks
more frames as you get heavier 